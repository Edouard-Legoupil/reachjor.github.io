#required packages:
#require("activityinfo")
#require("reshape2")
setwd("C:\\wamp\\www\\RCA_RRM\\data")
## install the packages that are not yet instaled
library(jsonlite)
library(car)
library(rgdal)
library(stringr)
rm(list = ls())
MEX<-"http://www.activityinfo.org/resources/sites/points?activity=16227"
alerte<-"http://www.activityinfo.org/resources/sites/points?activity=16228"
inter<-"http://www.activityinfo.org/resources/sites/points?activity=13327"
MSA<-"http://www.activityinfo.org/resources/sites/points?activity=16230"
dsn <-"caf_admbnd3_200k_sigcaf.shp"
#ogrListLayers(dsn)
#ogrInfo(dsn=dsn, layer="sous_pref")
pref<-readOGR(dsn=dsn,layer="caf_admbnd3_200k_sigcaf",encoding="UTF-8")
db<-1
#for (RRM in c(alerte,MSA,MEX,inter))
RRM<-MEX
{
db<-fromJSON(RRM,flatten=TRUE)
db<-as.data.frame(db$features,stringsAsFactors=FALSE, check.names=FALSE)
names(db)<-gsub("properties.recommandation(s)_du_","",names(db))  
names(db)<-gsub("properties.","",names(db))
names(db)<-gsub("indicators.","",names(db))
names(db)<-gsub("geometry.","",names(db))
names(db)<-gsub("\\s|-|_()+, ", "_",names(db))
names(db)<-gsub("__", "_",names(db))
names(db)<-gsub("__", "_",names(db))
geo<-rep("NA",length(db$coordinates))
X<-rep(0,length(db$coordinates))
Y<-rep(0,length(db$coordinates))
for (co in 1:length(db$coordinates))
{
geo[co]<-paste(db$coordinates[[co]][2],db$coordinates[[co]][1],sep=",")
Y[co]<-as.numeric(db$coordinates[[co]][2])
X[co]<-as.numeric(db$coordinates[[co]][1])
}
del<-c(which(names(db)=="coordinates")*-1,which(names(db)=="comments")*-1)
db<-db[,del]
db<-cbind(db,geo,X,Y)
db<-as.data.frame(db,check.names=FALSE)
for (i in 1:length(names(db))){
db[,i]<-recode(db[,i],"TRUE=1")
db[,i]<-recode(db[,i],"NA=0")
}
proj_layer<-CRS("+proj=longlat +datum=WGS84")
coordinates(db) = ~X+Y
proj4string(db)<-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"#cities<-readOGR(RRM,layer="MSA")
join<-over(db,pref)
join<-join[,c(4,6,8,10)]
db$startDate<-as.Date(db$startDate,"%Y-%m-%d")
db$endDate<-as.Date(db$endDate,"%Y-%m-%d")
month<- format(db$startDate, "%Y-%m")
year<- format(db$startDate, "%Y")
db<-cbind(db,month,year,join)
db<-as.data.frame(db,stringsAsFactors=FALSE,check.names=FALSE)
if(RRM==MSA){
db[,27]<-ifelse(db[,27]==1,"Pas d'intervention",NA)
db[,28]<-ifelse(db[,30]==1,"Santé/nutrition",NA)
db[,29]<-ifelse(db[,30]==1,"Securité Alimentaire",NA)
db[,30]<-ifelse(db[,30]==1,"Abris NFI",NA)
db[,31]<-ifelse(db[,30]==1,"WASH",NA)
db[,32]<-ifelse(db[,30]==1,"Education",NA)
db[,33]<-ifelse(db[,30]==1,"Logistique",NA)
db[,34]<-ifelse(db[,30]==1,"Protection",NA)
recommandation<-paste(db[,27],db[,28],db[,29],db[,30],db[,31],db[,32],db[,33],db[,34],sep=" ")
db<-cbind(db,recommandation)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
db<-as.data.frame(db,stringsAsFactors=FALSE)
score_de_Consommation_alimentaire_PauvreBorder<-as.numeric(levels(db[,9])[db[,9]])+
as.numeric(levels(db[,16])[db[,16]])
    score_de_Consommation_alimentaire_PauvreBorder<-
ifelse(score_de_Consommation_alimentaire_PauvreBorder<20,"0-20%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<40,"20-39%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<60,"40-59%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<80,"60-79%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<=100,"80-100%")))))
    db[,9]<-
ifelse(as.numeric(levels(db[,9])[db[,9]])<20,"0-20%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<40,"20-39%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<60,"40-59%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<80,"60-79%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<=100,"80-100%")))))
db[,16]<-
ifelse(as.numeric(levels(db[,16])[db[,16]])<20,"0-20%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<40,"20-39%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<60,"40-59%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<80,"60-79%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<=100,"80-100%")))))
db[,18]<-
ifelse(as.numeric(levels(db[,18])[db[,18]])<20,"0-20%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<40,"20-39%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<60,"40-59%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<80,"60-79%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<=100,"80-100%")))))
db[,10]<-
ifelse(as.numeric(levels(db[,10])[db[,10]])<20,"0-20%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<40,"20-39%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<60,"40-59%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<80,"60-79%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<=100,"80-100%")))))
db[,13]<-
ifelse(as.numeric(levels(db[,13])[db[,13]])<20,"0-20%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<40,"20-39%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<60,"40-59%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<80,"60-79%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<=100,"80-100%")))))
db[,21]<-
ifelse(as.numeric(levels(db[,21])[db[,21]])<20,"0-20%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<40,"20-39%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<60,"40-59%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<80,"60-79%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<=100,"80-100%")))))
db[,22]<-
ifelse(as.numeric(levels(db[,22])[db[,22]])<20,"0-20%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<40,"20-39%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<60,"40-59%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<80,"60-79%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<=100,"80-100%")))))
db<-cbind(db,score_de_Consommation_alimentaire_PauvreBorder)
write.csv(db,"RRM_MSA.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==MEX){
# db[,14] <-ifelse(db[,14]==1,"Plaidoyer acces sécuritaire",NA)
# db[,18]<-ifelse(db[,18]==1,"Intervention directe",NA)
# db[,16] <-ifelse(db[,16]==1,"MSA complete",NA)
# db[,20]  <-ifelse(db[,20]==1,"Réhabilitation acces logistique",NA)
# db[,19]  <-ifelse(db[,19]==1,"Evaluation sectorielle",NA)
# db[,21]   <-ifelse(db[,21] ==1,"Autre",NA)
# db[,15]  <-ifelse(db[,15]==1,"Monitoring protection",NA)
# db[,17] <-ifelse(db[,17]==1,"Suivi de retour des déplacés",NA)
for (k in 14:20,26:30){db[,k]<-recode(db[,k],"1='Oui';0='Non'")}
db[,23] <-ifelse(db[,23]==1,"Violence",NA)
db[,25] <-ifelse(db[,25]==1,"Catastrophe naturelle",NA)
db[,24] <-ifelse(db[,24]==1,"Autre",NA)
# db[,26] <-ifelse(db[,26]==1,"Déplacés",NA)
# db[,29] <-ifelse(db[,29]==1,"Autre",NA)
# db[,28] <-ifelse(db[,28]==1,"Communautés hote",NA) 
# db[,27] <-ifelse(db[,27] ==1,"Retours",NA)
# db[,30] <-ifelse(db[,30] ==1,"Rapatriés",NA)
proposition<-paste(db[,14],db[,18],
db[,16],db[,20],
db[,19],db[,21],
db[,15],db[,17],sep=" ")
Nature_choc<-paste(db[,23],db[,25],db[,24],sep=" ")
pop_type<-paste(db[,26],db[,27],db[,28],db[,29],db[,30],sep=" ")
db<-cbind(db,pop_type,proposition,Nature_choc)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
write.csv(db,"RRM_MEX.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==inter)
{
db[,115]<-ifelse(db[,115]==1,"WASH",NA)
db[,116]<-ifelse(db[,116]==1,"NFI",NA)
#db[,117]_Abris<-ifelse(db[,117]_Abris==1,"NFI/WASH/Abri",NA)
db[,117]<-ifelse(db[,117]==1,"NFI/WASH",NA)
intervention_type<-paste(db[,115],db[,116],db[,117],sep=" ")
db<-cbind(db,intervention_type)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
inter<-db
write.csv(db,"RRM_intervention.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==alerte)
{
db[,13]<-ifelse(db[,13]==1,"Oui",NA)
db[,12]<-ifelse(db[,12]==1,"Non - logistique",NA)
db[,15]<-ifelse(db[,15]==1,"Non - autre",NA)
db[,14]<-ifelse(db[,14]==1,"Non - sécurité",NA)
db[,17]<-ifelse(db[,17]==1,"Oui",NA)
db[,16]<-ifelse(db[,16]==1,"Non",NA)
#db$Alerte_en_cours.Non<-ifelse(db$Alerte_en_cours.Non==1,"Non",NA)
db[,19]<-ifelse(db[,19]==1,"Oui","Non")
db[,21]<-ifelse(db[,21],"Castastrophe naturelle",NA)
db[,20]<-ifelse(db[,20]==1,"Violence",NA)
#db[,22]<-ifelse(db[,22]==1,"Autre",NA)
db[,24]<-ifelse(db[,24]==1,"Communautés hote",NA)
db[,23]<-ifelse(db[,23]==1,"Déplacés",NA)
db[,25]<-ifelse(db[,25]==1,"Retours",NA)
db[,26]<-ifelse(db[,26]==1,"Autre",NA)
acces<-paste(db[,13],
db[,12],
db[,15],
db[,14],sep=" ")
continu<-paste(db[,17],
db[,16],sep=" ")
alerte_cours<-db[,19]
nature<-paste(
db[,21],
db[,20],sep=" ")
pop_affect<-paste(
db[,24],
db[,23],
db[,25],
db[,26],sep=" ")
db<-cbind(db,acces,continu,alerte_cours,nature,pop_affect)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
write.csv(db,"RRM_incident.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
}
#required packages:
#require("activityinfo")
#require("reshape2")
setwd("C:\\wamp\\www\\RCA_RRM\\data")
## install the packages that are not yet instaled
library(jsonlite)
library(car)
library(rgdal)
library(stringr)
rm(list = ls())
MEX<-"http://www.activityinfo.org/resources/sites/points?activity=16227"
alerte<-"http://www.activityinfo.org/resources/sites/points?activity=16228"
inter<-"http://www.activityinfo.org/resources/sites/points?activity=13327"
MSA<-"http://www.activityinfo.org/resources/sites/points?activity=16230"
dsn <-"caf_admbnd3_200k_sigcaf.shp"
#ogrListLayers(dsn)
#ogrInfo(dsn=dsn, layer="sous_pref")
pref<-readOGR(dsn=dsn,layer="caf_admbnd3_200k_sigcaf",encoding="UTF-8")
db<-1
#for (RRM in c(alerte,MSA,MEX,inter))
RRM<-MEX
{
db<-fromJSON(RRM,flatten=TRUE)
db<-as.data.frame(db$features,stringsAsFactors=FALSE, check.names=FALSE)
names(db)<-gsub("properties.recommandation(s)_du_","",names(db))  
names(db)<-gsub("properties.","",names(db))
names(db)<-gsub("indicators.","",names(db))
names(db)<-gsub("geometry.","",names(db))
names(db)<-gsub("\\s|-|_()+, ", "_",names(db))
names(db)<-gsub("__", "_",names(db))
names(db)<-gsub("__", "_",names(db))
geo<-rep("NA",length(db$coordinates))
X<-rep(0,length(db$coordinates))
Y<-rep(0,length(db$coordinates))
for (co in 1:length(db$coordinates))
{
geo[co]<-paste(db$coordinates[[co]][2],db$coordinates[[co]][1],sep=",")
Y[co]<-as.numeric(db$coordinates[[co]][2])
X[co]<-as.numeric(db$coordinates[[co]][1])
}
del<-c(which(names(db)=="coordinates")*-1,which(names(db)=="comments")*-1)
db<-db[,del]
db<-cbind(db,geo,X,Y)
db<-as.data.frame(db,check.names=FALSE)
for (i in 1:length(names(db))){
db[,i]<-recode(db[,i],"TRUE=1")
db[,i]<-recode(db[,i],"NA=0")
}
proj_layer<-CRS("+proj=longlat +datum=WGS84")
coordinates(db) = ~X+Y
proj4string(db)<-"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"#cities<-readOGR(RRM,layer="MSA")
join<-over(db,pref)
join<-join[,c(4,6,8,10)]
db$startDate<-as.Date(db$startDate,"%Y-%m-%d")
db$endDate<-as.Date(db$endDate,"%Y-%m-%d")
month<- format(db$startDate, "%Y-%m")
year<- format(db$startDate, "%Y")
db<-cbind(db,month,year,join)
db<-as.data.frame(db,stringsAsFactors=FALSE,check.names=FALSE)
if(RRM==MSA){
db[,27]<-ifelse(db[,27]==1,"Pas d'intervention",NA)
db[,28]<-ifelse(db[,30]==1,"Santé/nutrition",NA)
db[,29]<-ifelse(db[,30]==1,"Securité Alimentaire",NA)
db[,30]<-ifelse(db[,30]==1,"Abris NFI",NA)
db[,31]<-ifelse(db[,30]==1,"WASH",NA)
db[,32]<-ifelse(db[,30]==1,"Education",NA)
db[,33]<-ifelse(db[,30]==1,"Logistique",NA)
db[,34]<-ifelse(db[,30]==1,"Protection",NA)
recommandation<-paste(db[,27],db[,28],db[,29],db[,30],db[,31],db[,32],db[,33],db[,34],sep=" ")
db<-cbind(db,recommandation)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
db<-as.data.frame(db,stringsAsFactors=FALSE)
score_de_Consommation_alimentaire_PauvreBorder<-as.numeric(levels(db[,9])[db[,9]])+
as.numeric(levels(db[,16])[db[,16]])
    score_de_Consommation_alimentaire_PauvreBorder<-
ifelse(score_de_Consommation_alimentaire_PauvreBorder<20,"0-20%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<40,"20-39%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<60,"40-59%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<80,"60-79%",
ifelse(score_de_Consommation_alimentaire_PauvreBorder<=100,"80-100%")))))
    db[,9]<-
ifelse(as.numeric(levels(db[,9])[db[,9]])<20,"0-20%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<40,"20-39%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<60,"40-59%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<80,"60-79%",
ifelse(as.numeric(levels(db[,9])[db[,9]])<=100,"80-100%")))))
db[,16]<-
ifelse(as.numeric(levels(db[,16])[db[,16]])<20,"0-20%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<40,"20-39%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<60,"40-59%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<80,"60-79%",
ifelse(as.numeric(levels(db[,16])[db[,16]])<=100,"80-100%")))))
db[,18]<-
ifelse(as.numeric(levels(db[,18])[db[,18]])<20,"0-20%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<40,"20-39%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<60,"40-59%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<80,"60-79%",
ifelse(as.numeric(levels(db[,18])[db[,18]])<=100,"80-100%")))))
db[,10]<-
ifelse(as.numeric(levels(db[,10])[db[,10]])<20,"0-20%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<40,"20-39%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<60,"40-59%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<80,"60-79%",
ifelse(as.numeric(levels(db[,10])[db[,10]])<=100,"80-100%")))))
db[,13]<-
ifelse(as.numeric(levels(db[,13])[db[,13]])<20,"0-20%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<40,"20-39%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<60,"40-59%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<80,"60-79%",
ifelse(as.numeric(levels(db[,13])[db[,13]])<=100,"80-100%")))))
db[,21]<-
ifelse(as.numeric(levels(db[,21])[db[,21]])<20,"0-20%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<40,"20-39%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<60,"40-59%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<80,"60-79%",
ifelse(as.numeric(levels(db[,21])[db[,21]])<=100,"80-100%")))))
db[,22]<-
ifelse(as.numeric(levels(db[,22])[db[,22]])<20,"0-20%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<40,"20-39%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<60,"40-59%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<80,"60-79%",
ifelse(as.numeric(levels(db[,22])[db[,22]])<=100,"80-100%")))))
db<-cbind(db,score_de_Consommation_alimentaire_PauvreBorder)
write.csv(db,"RRM_MSA.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==MEX){
# db[,14] <-ifelse(db[,14]==1,"Plaidoyer acces sécuritaire",NA)
# db[,18]<-ifelse(db[,18]==1,"Intervention directe",NA)
# db[,16] <-ifelse(db[,16]==1,"MSA complete",NA)
# db[,20]  <-ifelse(db[,20]==1,"Réhabilitation acces logistique",NA)
# db[,19]  <-ifelse(db[,19]==1,"Evaluation sectorielle",NA)
# db[,21]   <-ifelse(db[,21] ==1,"Autre",NA)
# db[,15]  <-ifelse(db[,15]==1,"Monitoring protection",NA)
# db[,17] <-ifelse(db[,17]==1,"Suivi de retour des déplacés",NA)
for (k in c(14:20,26:30)){db[,k]<-recode(db[,k],"1='Oui';0='Non'")}
db[,23] <-ifelse(db[,23]==1,"Violence",NA)
db[,25] <-ifelse(db[,25]==1,"Catastrophe naturelle",NA)
db[,24] <-ifelse(db[,24]==1,"Autre",NA)
# db[,26] <-ifelse(db[,26]==1,"Déplacés",NA)
# db[,29] <-ifelse(db[,29]==1,"Autre",NA)
# db[,28] <-ifelse(db[,28]==1,"Communautés hote",NA) 
# db[,27] <-ifelse(db[,27] ==1,"Retours",NA)
# db[,30] <-ifelse(db[,30] ==1,"Rapatriés",NA)
proposition<-paste(db[,14],db[,18],
db[,16],db[,20],
db[,19],db[,21],
db[,15],db[,17],sep=" ")
Nature_choc<-paste(db[,23],db[,25],db[,24],sep=" ")
pop_type<-paste(db[,26],db[,27],db[,28],db[,29],db[,30],sep=" ")
db<-cbind(db,pop_type,proposition,Nature_choc)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
write.csv(db,"RRM_MEX.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==inter)
{
db[,115]<-ifelse(db[,115]==1,"WASH",NA)
db[,116]<-ifelse(db[,116]==1,"NFI",NA)
#db[,117]_Abris<-ifelse(db[,117]_Abris==1,"NFI/WASH/Abri",NA)
db[,117]<-ifelse(db[,117]==1,"NFI/WASH",NA)
intervention_type<-paste(db[,115],db[,116],db[,117],sep=" ")
db<-cbind(db,intervention_type)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
inter<-db
write.csv(db,"RRM_intervention.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
if(RRM==alerte)
{
db[,13]<-ifelse(db[,13]==1,"Oui",NA)
db[,12]<-ifelse(db[,12]==1,"Non - logistique",NA)
db[,15]<-ifelse(db[,15]==1,"Non - autre",NA)
db[,14]<-ifelse(db[,14]==1,"Non - sécurité",NA)
db[,17]<-ifelse(db[,17]==1,"Oui",NA)
db[,16]<-ifelse(db[,16]==1,"Non",NA)
#db$Alerte_en_cours.Non<-ifelse(db$Alerte_en_cours.Non==1,"Non",NA)
db[,19]<-ifelse(db[,19]==1,"Oui","Non")
db[,21]<-ifelse(db[,21],"Castastrophe naturelle",NA)
db[,20]<-ifelse(db[,20]==1,"Violence",NA)
#db[,22]<-ifelse(db[,22]==1,"Autre",NA)
db[,24]<-ifelse(db[,24]==1,"Communautés hote",NA)
db[,23]<-ifelse(db[,23]==1,"Déplacés",NA)
db[,25]<-ifelse(db[,25]==1,"Retours",NA)
db[,26]<-ifelse(db[,26]==1,"Autre",NA)
acces<-paste(db[,13],
db[,12],
db[,15],
db[,14],sep=" ")
continu<-paste(db[,17],
db[,16],sep=" ")
alerte_cours<-db[,19]
nature<-paste(
db[,21],
db[,20],sep=" ")
pop_affect<-paste(
db[,24],
db[,23],
db[,25],
db[,26],sep=" ")
db<-cbind(db,acces,continu,alerte_cours,nature,pop_affect)
db<-as.data.frame(sapply(db,gsub,pattern="NA ",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern=" NA",replacement=""))
db<-as.data.frame(sapply(db,gsub,pattern="  ",replacement=" "))
db<-as.data.frame(sapply(db,str_trim))
write.csv(db,"RRM_incident.csv",row.names=FALSE,fileEncoding = "UTF-8")
}
}
q()
